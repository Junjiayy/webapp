<style lang="less">
  page {
    background-color: #FFFFFF;
  }

  .avatar-wrap {
    position: relative;
    margin-right: 10px;
  }

  .avatar {
    width: 50px;
    height: 50px;
    display: block;
    border-radius: 50%;
  }

  .topic-title {
    padding: 15px;
  }
</style>
<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells weui-cells_after-title">
        <navigator open-type="redirect" class="weui-cell" url="/pages/users/show?id={{ topic.user.id }}">
          <view class="weui-cell__hd avatar-wrap">
            <image class="avatar" src="{{ topic.user.avatar }}"/>
          </view>
          <view class="weui-cell__bd">
            <view>{{ topic.user.name }}</view>
            <view class="page__desc">{{ topic.user.introduction }}</view>
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
      </view>
      <view class="topic-title">
        <view class="page__title">{{ topic.title }}</view>
        <view class="weui-media-box__info topic-info">
          <view class="weui-media-box__info__meta">{{ topic.category.name }} •</view>
          <view class="weui-media-box__info__meta">{{ topic.updated_at_diff }} •</view>
          <view class="weui-media-box__info__meta">{{ topic.reply_count }} 次回复</view>
        </view>
      </view>
      <view class="weui-article">
        <rich-text nodes="{{ topic.body }}" bindtap="tap"></rich-text>

        <button wx:if="{{ canDelete }}" @tap="deleteTopic" class="weui-btn mini-btn" type="default" size="mini">删除
        </button>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import util from '@/utils/util'

  export default class TopicShow extends wepy.page {
    config = {
      navigationBarTitleText: '话题详情'
    }

    data = {
      topic: null,
      user: null
    }

    computed = {
      canDelete() {
        if (!this.topic || !this.user) return false
        return this.user.id === this.topic.user_id
      }
    }

    async getTopic(id) {
      try {
        let topicResponse = await api.request({
          url: 'topics/' + id,
          data: {
            include: 'user,category'
          }
        })

        let topic = topicResponse.data
        topic.updated_at_diff = util.diffForHumans(topic.updated_at)

        this.topic = topic
        this.$apply()
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }

    methods = {
      async deleteTopic() {
        let res = await wepy.showModal({
          title: '确认删除',
          content: '您确认删除该删除',
          confirmText: '确认',
          cancelText: '取消'
        })

        if (!res.confirm) return

        let deleteResponse = await api.authRequest({
          url: 'topics/' + this.topic.id,
          method: 'DELETE'
        })

        if (deleteResponse.statusCode === 204) {
          wepy.showToast({
            title: '删除成功',
            icon: 'success'
          })
        }

        let pages = this.getCurrentPages()
        if (pages.length > 1) {
          let refreshPages = []
          pages.forEach(function (page) {
            if (page.route === 'pages/topics/index' || page.route === 'pages/topics/user_index') {
              refreshPages.push(page.route)
            }
          })

          this.$parent.globalData.refreshPages = this.$parent.globalData.refreshPages.concat(refreshPages)
        }

        setTimeout(function () {
          wepy.navigateBack()
        }, 2000)
      }
    }

    async onLoad(options) {
      await this.getTopic(options.id)
      this.user = await this.$parent.getCurrentUser()
      this.$apply()
    }
  }
</script>
